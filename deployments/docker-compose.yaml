version: "3.8"
services:
  app:
    build:
      context: ../
      dockerfile: ./deployments/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - L0_HOST=0.0.0.0
      - L0_PORT=8080
      - L0_KAFKA_URL=kafka:9092
      - L0_DB_HOST=postgres
      - L0_DB_PORT=5432
      - L0_DB_USER=postgres
      - L0_DB_PASSWORD=postgres
      - L0_DB_DB=wb_l0
    networks:
      - net_wb
    depends_on:
      kafka:
        condition: service_started
      postgres:
        condition: service_healthy

  kafka:
    image: bitnami/kafka:3.9.0
    ports:
      - "9094:9094"
    volumes:
      - kafka_data:/bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - net_wb

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: wb_l0
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - net_wb

  postgres:
    image: postgres:17.0-alpine3.20
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wb_l0
    ports:
      - "5433:5432"
    volumes:
      - ./db-init:/docker-entrypoint-initdb.d
      - pg_data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - net_wb

  adminer:
    image: adminer
    ports:
      - "8081:8080"
    networks:
      - net_wb

volumes:
  kafka_data:
  pg_data:

networks:
  net_wb:
    driver: bridge
